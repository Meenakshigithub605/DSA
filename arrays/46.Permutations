class Solution {
    private:
    void recurrence(vector<int>&mid,vector<int>&nums,vector<vector<int>>&ans,vector<int>freq){
        if(mid.size()==nums.size()){
            ans.push_back(mid);
            return;
        }
        for(int i=0;i<nums.size();i++){
            if(!freq[i]){
                mid.push_back(nums[i]);
                freq[i]=1;
                recurrence(mid,nums,ans,freq);
                freq[i]=0;
                mid.pop_back();
            }
        }
    } 
public:
    vector<vector<int>> permute(vector<int>& nums) {
       vector<vector<int>>ans;
       vector<int>mid;
       vector<int>freq(nums.size(),0);
        for(int i=0;i<nums.size();i++)freq[i]=0;
        recurrence(mid,nums,ans,freq);
        return ans;
    }
};
