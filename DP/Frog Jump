class Solution {
public:
    int ans(int n,vector<int>height,vector<int>&dp){
        if(n==0) return 0;
        if(dp[n]!=-1) return dp[n];
        int left=ans(n-1,height,dp)+abs(height[n]-height[n-1]);
        int right=INT_MAX;
        if(n>1) right=ans(n-2,height,dp)+abs(height[n]-height[n-2]);
        return dp[n]=min(left,right);
    }
    int frogJump(vector<int>& heights) {
        int n=heights.size();
        vector<int>dp(n+1,-1);
        return ans(n-1,heights,dp);
    }
};
