class Solution {
public:
    long long splitArray(vector<int>& nums) {
        long long sum=accumulate(nums.begin(),nums.end(),0LL);
        long long left=nums[0],right=sum-nums[0],min1=INT_MAX;
        int i=1,n=nums.size();
        while(i<nums.size() && nums[i]>nums[i-1]){
            left+=nums[i];
            i+=1;
        }
        if(i==nums.size()) return abs((sum-nums[n-1])-nums[n-1]);
        long long left1=left-nums[i-1];
        if(nums[i]==nums[i-1]) left1=left;
        //as we have 2 possible, eg-1, start from 3 or 2 ,i.e left1 or left
        
        long long right1=sum-left1;
        right=sum-left;
        if(left1==left) right1=right;
        i+=1;
        while(i<nums.size() && nums[i]<nums[i-1]){
            i+=1;
        }
        if(i!=nums.size()) return -1;
        else return min(abs(left-right),abs(left1-right1));
    }
};Â©leetcode